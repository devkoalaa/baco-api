generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Item {
  id        String    @id @default(uuid()) @db.Uuid
  name      String
  image     String?
  createdAt DateTime  @default(now()) @db.Timestamptz(6)
  updatedAt DateTime? @db.Timestamptz(6)
  deletedAt DateTime? @db.Timestamptz(6)
  quantity  Int       @default(0)
}

model Gift {
  id                String         @id @default(uuid()) @db.Uuid
  name              String
  image             String?
  description       String
  quantity          Int            @default(1)
  quantityPurchased Int            @default(0)
  createdAt         DateTime       @default(now()) @db.Timestamptz(6)
  updatedAt         DateTime?      @db.Timestamptz(6)
  deletedAt         DateTime?      @db.Timestamptz(6)
  PresenceGift      PresenceGift[]
}

model Presence {
  id                    String         @id @default(uuid()) @db.Uuid
  name                  String
  phone                 String
  acompanhantesAdultos  Int            @default(0)
  acompanhantesCriancas Int            @default(0)
  createdAt             DateTime       @default(now()) @db.Timestamptz(6)
  updatedAt             DateTime?      @db.Timestamptz(6)
  deletedAt             DateTime?      @db.Timestamptz(6)
  selectedGifts         PresenceGift[]
}

model PresenceGift {
  id         String   @id @default(uuid()) @db.Uuid
  presenceId String   @db.Uuid
  giftId     String   @db.Uuid
  quantity   Int      @default(1)
  gift       Gift     @relation(fields: [giftId], references: [id])
  presence   Presence @relation(fields: [presenceId], references: [id])

  @@unique([presenceId, giftId])
}

model Message {
  id        String    @id @default(uuid()) @db.Uuid
  content   String
  sender    String
  isRead    Boolean?  @default(false)
  createdAt DateTime  @default(now()) @db.Timestamptz(6)
  updatedAt DateTime? @db.Timestamptz(6)
  deletedAt DateTime? @db.Timestamptz(6)
}
